---
- name: "Setup.yml"
  hosts: localhost
  gather_facts: yes
  become: yes
  tasks:
  - name: Colorize root shell prompt
    lineinfile:
      path: /root/.bashrc
      line: 'export PS1="\[\033[38;5;11m\]\u\[$(tput sgr0)\]\[\033[38;5;15m\]@\h:\[$(tput sgr0)\]\[\033[38;5;6m\][\w]:\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]"'
      state: present

  - name: Alias vi to vim
    lineinfile:
      path: /root/.bashrc
      line: "alias vi='vim'"
      state: present

  - name: configure krew in bashrc
    lineinfile:
      path: /root/.bashrc
      line: "export PATH='${KREW_ROOT:-$HOME/.krew}/bin:$PATH'"
      state: present


  - name: Enable root SSH login
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "^PermitRootLogin"
      line: "PermitRootLogin yes"
      state: present

  - name: prep installing krew
    copy:
      dest: "/opt/instkrew.sh"
      content: |
        (
        set -x; cd "$(mktemp -d)" &&
        curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz" &&
        tar zxvf krew.tar.gz &&
        KREW=./krew-"$(uname | tr '[:upper:]' '[:lower:]')_$(uname -m | sed -e 's/x86_64/amd64/' -e 's/arm.*$/arm/')" &&
        "$KREW" install krew
        )

  - name: modules for containerd
    copy:
      dest: "/etc/modules-load.d/containerd.conf"
      content: |
        overlay
        br_netfilter
  
  - name: Add the overlay module
    community.general.modprobe:
      name: overlay
      state: present
  - name: Add the br_netfilter module
    community.general.modprobe:
      name: br_netfilter
      state: present

  - ansible.posix.sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: '1'
      state: absent
      sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
  - ansible.posix.sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      state: absent
      sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
  - ansible.posix.sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      state: absent
      sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
      reload: yes


  - name: Disable quiet boot mode
    lineinfile:
      path: /etc/default/grub
      regexp: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet"'
      line: 'GRUB_CMDLINE_LINUX_DEFAULT=""'
      state: present

  - name: Update grub2
    command: update-grub2


  - name: Add an the signing key for Docker
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Add Docker repository into sources list
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
      state: present

  - name: Add an the signing key for Kubernetes
    ansible.builtin.apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes repository into sources list
    ansible.builtin.apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present

  - name: Upgrade all packages
    apt:
      update_cache: yes
      upgrade: dist

  - name: Install packages
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - bash-completion
      - ccze
      - curl
      - git
      - zsh
      - tmux
      - gnupg2
      - apt-transport-https
      - net-tools
      - containerd.io
      - rsync
      - screen
      - tcpdump
      - vim
      - kubectl
      - kubelet
      - kubeadm
      - wget
      - ca-certificates
      - software-properties-common

  - name: Install open-vm-tools
    apt:
      name: open-vm-tools
      state: latest
    when:
      - ansible_virtualization_type == "VMware"

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /etc/containerd
      state: directory
  - name: configure containerd
    command: containerd config default | sudo tee /etc/containerd/config.toml

 

  - name: Prevent python from being upgraded
    dpkg_selections:
      name: "{{ hold_packages }}"
      selection: hold
    vars:
      packages: 
      - kubelet
      - kubeadm
      - kubectl